name: Publish

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The new version in vX.Y.Z format."
        required: true

jobs:
  publish:
    continue-on-error: true
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: macos-latest
            package_arg: --mac --arm64
            target: aarch64-apple-darwin
          - os: macos-latest
            package_arg: --mac --x64
            target: x86_64-apple-darwin
          - os: windows-latest
            package_arg: --win --x64
            target: x86_64-pc-windows-msvc
    defaults:
      run:
        working-directory: "taker-electron"

    steps:
      - name: Checkout tagged commit
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.ITCHY_GITHUB_TOKEN }}

      - name: Fetch all tags (workaround for https://github.com/actions/checkout/issues/290)
        run: git fetch --tags --force

      - name: Setup rust toolchain
        working-directory: "./"
        run: rustup show
      - uses: Swatinem/rust-cache@v2.0.0

      - name: Install Protoc for Windows
        if: matrix.os == 'windows-latest'
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Node and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn
          cache-dependency-path: |
            taker-frontend/yarn.lock

      - name: Build taker frontend
        working-directory: taker-frontend
        shell: bash
        run: |
          yarn
          yarn build

      - name: Install Node and Npm for taker-electron
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: |
            taker-electron/package-lock.json

      - name: package.json change version to ${{github.event.inputs.version}}
        id: info
        uses: jaywcjlove/github-action-package@main
        with:
          path: taker-electron/release/app/package.json
          data: |
            {
              "version": "${{github.event.inputs.version}}"
            }
      - name: Cat package.json
        run: cat ./release/app/package.json

      - name: Install
        run: |
          npm install
      - name: Postinstall
        run: |
          npm run postinstall

      - name: Build rust files ${{matrix.target}}
        run: |
          npm run build:rust --release --target=${{matrix.target}}

      - name: Build electron files
        run: |
          npm run build

      - name: Publish releases
        env:
          # These values are used for auto updates signing
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          # This is used for uploading release assets to github
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm exec electron-builder -- --publish always ${{matrix.package_arg}}

name: Publish

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The new version in vX.Y.Z format."
        required: true

jobs:
  publish:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    defaults:
      run:
        working-directory: "taker-electron"

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v1

      - name: Install Node and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 16
          cache: yarn
          cache-dependency-path: |
            taker-frontend/yarn.lock

      - name: Install Node and Npm
        uses: actions/setup-node@v1
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: |
            taker-electron/package-lock.json

      - name: Prepare package.json with new version ${{github.event.inputs.version}}
        run: |
          jq '.version="${{github.event.inputs.version}}"' ./release/app/package.json > /tmp/package.json
          mv /tmp/package.json ./release/app/package.json       
          cat ./release/app/package.json

      - name: Install and build
        run: |
          npm install
          npm run postinstall
          npm run build

      - name: Publish releases
        env:
          # These values are used for auto updates signing
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          # This is used for uploading release assets to github
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm exec electron-builder -- --publish always --win --mac
